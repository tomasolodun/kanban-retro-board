{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nlet BoardComponent = class BoardComponent {\n  constructor(boardService, authService, router, ngZone) {\n    this.boardService = boardService;\n    this.authService = authService;\n    this.router = router;\n    this.ngZone = ngZone;\n  }\n\n  ngOnInit() {\n    console.log('BOARD - INIT');\n  }\n\n  onColorChange(color, columnId) {\n    this.boardService.changeColumnColor(color, columnId);\n  }\n\n  onAddCard(text, columnId) {\n    if (text) {\n      this.boardService.addCard(text, columnId);\n    }\n  }\n\n  onDeleteColumn(columnId) {\n    this.boardService.deleteColumn(columnId);\n  }\n\n  onDeleteCard(cardId, columnId) {\n    this.boardService.deleteCard(cardId, columnId);\n  }\n\n  onChangeLike(event, columnId) {\n    const {\n      card: {\n        id\n      },\n      increase\n    } = event;\n    this.boardService.changeLike(id, columnId, increase);\n  }\n\n  onAddComment(event, columnId) {\n    this.boardService.addComment(columnId, event.id, event.text);\n  }\n\n  onDeleteComment(comment, columnId, item) {\n    this.boardService.deleteComment(columnId, item.id, comment.id);\n  }\n\n  drop(event) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    }\n  }\n\n};\nBoardComponent = __decorate([Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})], BoardComponent);\nexport { BoardComponent };","map":null,"metadata":{},"sourceType":"module"}